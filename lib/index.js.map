{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Created by user on 2018/11/28/028.\n */\n\nimport crossSpawn = require('cross-spawn-extra');\nimport JSON5 = require('json5');\n\nimport _validateNpmPackageName = require('validate-npm-package-name');\nimport fs = require('fs-extra');\nimport path = require('path');\n\nexport function npmVersion(npmClient?: string, cwd?: string)\n{\n\tlet args = [\n\t\t'version',\n\t];\n\n\tnpmClient = npmClient || 'npm';\n\n\tif (npmClient === 'yarn')\n\t{\n\t\targs = [\n\t\t\t'versions',\n\t\t]\n\t}\n\n\tlet cp = crossSpawn.sync(npmClient, args, {\n\t\tcwd,\n\t\tstripAnsi: true,\n\t});\n\n\tif (cp.error)\n\t{\n\t\tthrow cp.error\n\t}\n\n\tlet output = cp.stdout.toString()\n\t\t.replace(/^yarn versions [^\\n]+$/gm, '')\n\t\t.replace(/^Done in [^\\n]+$/gm, '')\n\t\t.replace(/^\\s+|\\s+$/g, '')\n\t;\n\n\tlet json = JSON5.parse(output);\n\n\treturn json\n}\n\nexport function getTargetDir(options: {\n\tinputName: string,\n\tcwd: string,\n\n\ttargetName?: string,\n\thasWorkspace?: string,\n\tworkspacePrefix?: string,\n})\n{\n\tlet targetDir: string;\n\tlet targetName: string = options.targetName || null;\n\tlet { inputName, cwd, hasWorkspace, workspacePrefix } = options;\n\n\tif (hasWorkspace && !workspacePrefix)\n\t{\n\t\tthrow new RangeError(`can't found workspace prefix`);\n\t}\n\n\tif (targetName)\n\t{\n\t\tvalidateNpmPackageName(targetName, true);\n\t}\n\n\tif (inputName)\n\t{\n\t\ttargetName = targetName || inputName;\n\n\t\tlet ret = validateNpmPackageName(inputName, true);\n\t\tlet name = inputName;\n\n\t\tlet basePath: string;\n\n\t\tif (hasWorkspace)\n\t\t{\n\t\t\tbasePath = path.join(hasWorkspace, workspacePrefix);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tbasePath = cwd;\n\t\t}\n\n\t\tif (ret.scopedPackagePattern)\n\t\t{\n\t\t\tname = name\n\t\t\t\t.replace(/[\\/\\\\]+/g, '_')\n\t\t\t\t.replace(/^@/g, '')\n\t\t\t;\n\n\t\t\tif (!fs.pathExistsSync(path.join(basePath, ret.subname)))\n\t\t\t{\n\t\t\t\tname = ret.subname;\n\t\t\t}\n\t\t}\n\n\t\ttargetDir = path.resolve(basePath, name);\n\n\t}\n\telse\n\t{\n\t\ttargetDir = cwd;\n\t}\n\n\treturn {\n\t\ttargetDir,\n\t\ttargetName,\n\t\tcwd,\n\t}\n}\n\nconst scopedPackagePattern = new RegExp('^(?:@([^/]+?)[/])?([^/]+?)$');\n\nexport function validateNpmPackageName(name: string, throwErr?: boolean)\n{\n\tlet ret: {\n\t\tvalidForNewPackages: boolean,\n\t\tvalidForOldPackages: boolean,\n\t\tscopedPackagePattern: boolean,\n\t\twarnings?: string[],\n\t\terrors?: string[],\n\n\t\tname: string,\n\t\tuser?: string,\n\t\tsubname?: string,\n\n\t} = _validateNpmPackageName(name);\n\n\tret.name = name;\n\n\tif (!ret.errors || !ret.errors.length)\n\t{\n\t\tconst nameMatch = name.match(scopedPackagePattern);\n\n\t\tif (nameMatch)\n\t\t{\n\t\t\tret.scopedPackagePattern = true;\n\n\t\t\tret.user = nameMatch[1];\n\t\t\tret.subname = nameMatch[2];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tret.scopedPackagePattern = false;\n\t\t}\n\t}\n\telse if (throwErr)\n\t{\n\t\tthrow new RangeError(ret.errors.concat(ret.warnings || []).join(' ; '));\n\t}\n\n\treturn ret;\n}\n\nexport const defaultCopyStaticFiles = Object.freeze([\n\n\t['.npmignore', 'file/npmignore'],\n\t['.gitignore', 'file/gitignore'],\n\n\t['.nvmrc', 'file/nvmrc'],\n\t['.browserslistrc', 'file/browserslistrc'],\n\n\t['tsconfig.json.tpl', 'file/tsconfig.json.tpl', 'tsconfig.json'],\n\n\t['.eslintrc.json.tpl', 'file/eslintrc.json.tpl', '.eslintrc.json'],\n\n]) as [string, string, string?][];\n\nexport function copyStaticFiles(file_map: Record<string, string> | [string, string, string?][], options: {\n\tcwd: string,\n\tstaticRoot?: string,\n\toverwrite?: boolean,\n})\n{\n\tif (!options.cwd || typeof options.cwd != 'string')\n\t{\n\t\tthrow new TypeError(`options.cwd must is string`)\n\t}\n\n\tif (!fs.pathExistsSync(options.cwd))\n\t{\n\t\tthrow new TypeError(`options.cwd not exists`)\n\t}\n\n\tlet copyOptions: fs.CopyOptionsSync = {\n\t\toverwrite: options.overwrite || false,\n\t\tpreserveTimestamps: true,\n\t\terrorOnExist: false,\n\t};\n\n\tconst { cwd } = options;\n\tconst staticRoot = options.staticRoot || __dirname;\n\n\tlet ls: string[][];\n\n\tif (Array.isArray(file_map))\n\t{\n\t\tls = Object.values(file_map)\n\t}\n\telse\n\t{\n\t\tls = Object.entries(file_map)\n\t}\n\n\tls = ls.filter(v => v && Array.isArray(v) && v.length > 1);\n\n\tif (!ls.length)\n\t{\n\t\tthrow new TypeError(`file_map is not file map`)\n\t}\n\n\tls\n\t\t.forEach(function ([a, b, c])\n\t\t{\n\t\t\tlet fa = path.join(cwd, a);\n\t\t\tlet fb = path.join(staticRoot, b);\n\n\t\t\tif (c != null)\n\t\t\t{\n\t\t\t\tlet fc = path.join(cwd, c);\n\n\t\t\t\tif (fs.existsSync(fc))\n\t\t\t\t{\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!fs.existsSync(fb))\n\t\t\t{\n\t\t\t\tthrow new Error(`file not exists. ${fb}`)\n\t\t\t}\n\n\t\t\tfs.copySync(fb, fa, copyOptions);\n\t\t})\n\t;\n}\n"]}